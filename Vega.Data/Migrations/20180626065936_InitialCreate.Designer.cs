// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Vega.Data;

namespace Vega.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20180626065936_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.0-rtm-30799")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Vega.Data.Entities.ContactEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("Phone")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("Vega.Data.Entities.FeatureEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<int?>("VehicleEntityId");

                    b.HasKey("Id");

                    b.HasIndex("VehicleEntityId");

                    b.ToTable("Features");
                });

            modelBuilder.Entity("Vega.Data.Entities.MakeEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Makes");
                });

            modelBuilder.Entity("Vega.Data.Entities.ModelEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("MakeEntityId");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("MakeEntityId");

                    b.ToTable("Models");
                });

            modelBuilder.Entity("Vega.Data.Entities.VehicleEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ContactId");

                    b.Property<DateTime>("LastUpdated");

                    b.Property<int?>("MakeId");

                    b.Property<int>("ModelId");

                    b.Property<bool>("Registered");

                    b.HasKey("Id");

                    b.HasIndex("ContactId");

                    b.HasIndex("MakeId");

                    b.HasIndex("ModelId");

                    b.ToTable("Vehicles");
                });

            modelBuilder.Entity("Vega.Data.Entities.FeatureEntity", b =>
                {
                    b.HasOne("Vega.Data.Entities.VehicleEntity")
                        .WithMany("Features")
                        .HasForeignKey("VehicleEntityId");
                });

            modelBuilder.Entity("Vega.Data.Entities.ModelEntity", b =>
                {
                    b.HasOne("Vega.Data.Entities.MakeEntity")
                        .WithMany("Models")
                        .HasForeignKey("MakeEntityId");
                });

            modelBuilder.Entity("Vega.Data.Entities.VehicleEntity", b =>
                {
                    b.HasOne("Vega.Data.Entities.ContactEntity", "Contact")
                        .WithMany()
                        .HasForeignKey("ContactId");

                    b.HasOne("Vega.Data.Entities.MakeEntity", "Make")
                        .WithMany()
                        .HasForeignKey("MakeId");

                    b.HasOne("Vega.Data.Entities.ModelEntity", "Model")
                        .WithMany()
                        .HasForeignKey("ModelId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
